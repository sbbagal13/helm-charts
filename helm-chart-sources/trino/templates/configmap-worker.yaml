{{- if gt (int .Values.server.workers) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.worker" . }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
{{ (.Files.Glob "files/*").AsConfig | indent 2 }}

  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
    plugin.dir={{ .Values.server.node.pluginDir }}

  jvm.config: |
    -server
    -Xmx{{ .Values.server.jvm.maxHeapSize }}
    -XX:+{{ .Values.server.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.server.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true

  config.properties: |
    coordinator=false
    http-server.http.port={{ .Values.server.config.http.port }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.server.config.query.maxMemoryPerNode }}
    query.max-total-memory={{ .Values.server.config.query.maxTotalMemory }}
    query.max-total-memory-per-node={{ .Values.server.config.query.maxTotalMemoryPerNode }}
    discovery.uri=http://{{ template "trino.fullname" . }}:{{ .Values.server.config.http.port }}

  log.properties: |
    io.trino={{ .Values.server.log.trino.level }}

  ranger-trino-audit.xml: |
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    --><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><configuration xmlns:xi="http://www.w3.org/2001/XInclude">

        <property>
            <name>xasecure.audit.is.enabled</name>
            <value>true</value>
        </property>

        <!-- DB audit provider configuration -->

        <property>
            <name>xasecure.audit.db.is.enabled</name>
            <value>false</value>
        </property>
        <property>
            <name>xasecure.audit.db.is.async</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.db.async.max.queue.size</name>
            <value>10240</value>
        </property>
        <property>
            <name>xasecure.audit.db.async.max.flush.interval.ms</name>
            <value>30000</value>
        </property>
        <property>
            <name>xasecure.audit.db.batch.size</name>
            <value>100</value>
        </property>

        <!--  Properties whose name begin with "xasecure.audit.jpa." are used to configure JPA -->
        <property>
            <name>xasecure.audit.jpa.javax.persistence.jdbc.url</name>
            <value>jdbc:mysql://localhost:3306/ranger_audit</value>
        </property>
        <property>
            <name>xasecure.audit.jpa.javax.persistence.jdbc.user</name>
            <value>rangerlogger</value>
        </property>
        <property>
            <name>xasecure.audit.jpa.javax.persistence.jdbc.password</name>
            <value>none</value>
        </property>
        <property>
            <name>xasecure.audit.jpa.javax.persistence.jdbc.driver</name>
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property>
            <name>xasecure.audit.credential.provider.file</name>
            <value>jceks://file/etc/ranger/trinodev/auditcred.jceks</value>
        </property>

        <!-- HDFS audit provider configuration -->
        <property>
            <name>xasecure.audit.hdfs.is.enabled</name>
            <value>false</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.is.async</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.async.max.queue.size</name>
            <value>1048576</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.async.max.flush.interval.ms</name>
            <value>30000</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.encoding</name>
            <value/>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.destination.directory</name>
            <value>hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.destination.file</name>
            <value>%hostname%-audit.log</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.destination.flush.interval.seconds</name>
            <value>900</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.destination.rollover.interval.seconds</name>
            <value>86400</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.destination.open.retry.interval.seconds</name>
            <value>60</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.buffer.directory</name>
            <value>__REPLACE__LOG_DIR/presto/audit</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.buffer.file</name>
            <value>%time:yyyyMMdd-HHmm.ss%.log</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.buffer.file.buffer.size.bytes</name>
            <value>8192</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.buffer.flush.interval.seconds</name>
            <value>60</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.buffer.rollover.interval.seconds</name>
            <value>600</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.archive.directory</name>
            <value>__REPLACE__LOG_DIR/presto/audit/archive</value>
        </property>
        <property>
            <name>xasecure.audit.hdfs.config.local.archive.max.file.count</name>
            <value>10</value>
        </property>

        <!-- Audit to HDFS on Azure Datastore (WASB) requires v3 style settings.  Comment the above and uncomment only the
        following to audit to Azure Blob Datastore via hdfs' WASB schema.

        NOTE: If you specify one audit destination in v3 style then other destinations, if any, must also be specified in v3 style
        ====

        <property>
            <name>xasecure.audit.destination.hdfs</name>
            <value>enabled</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.dir</name>
            <value>wasb://ranger-audit1@youraccount.blob.core.windows.net</value>
        </property>

        the following 3 correspond to the properties with similar name in core-site.xml, i.e.
        - fs.azure.account.key.youraccount.blob.core.windows.net => xasecure.audit.destination.hdfs.config.fs.azure.account.key.youraccount.blob.core.windows.net and
        - fs.azure.account.keyprovider.youraccount.blob.core.windows.net => xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.youraccount.blob.core.windows.net,
        - fs.azure.shellkeyprovider.script => xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script,

        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.account.key.youraccount.blob.core.windows.net</name>
            <value>YOUR ENCRYPTED ACCESS KEY</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.youraccount.blob.core.windows.net</name>
            <value>org.apache.hadoop.fs.azure.ShellDecryptionKeyProvider</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script</name>
            <value>/usr/lib/python2.7/dist-packages/hdinsight_common/decrypt.sh</value>
        </property>
        -->

        <!-- Log4j audit provider configuration -->

        <property>
            <name>xasecure.audit.log4j.is.enabled</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.log4j.is.async</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.log4j.async.max.queue.size</name>
            <value>10240</value>
        </property>
        <property>
            <name>xasecure.audit.log4j.async.max.flush.interval.ms</name>
            <value>30000</value>
        </property>

        <!-- trino audit provider configuration -->

        <property>
            <name>xasecure.audit.trino.is.enabled</name>
            <value>false</value>
        </property>
        <property>
            <name>xasecure.audit.trino.async.max.queue.size</name>
            <value>1</value>
        </property>
        <property>
            <name>xasecure.audit.trino.async.max.flush.interval.ms</name>
            <value>1000</value>
        </property>
        <property>
            <name>xasecure.audit.trino.broker_list</name>
            <value>localhost:9092</value>
        </property>

        <property>
            <name>xasecure.audit.trino.topic_name</name>
            <value>ranger_audits</value>
        </property>

        <!-- Ranger audit provider configuration -->

        <property>
            <name>xasecure.audit.solr.is.enabled</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.solr.async.max.queue.size</name>
            <value>1</value>
        </property>
        <property>
            <name>xasecure.audit.solr.async.max.flush.interval.ms</name>
            <value>1000</value>
        </property>
        <property>
            <name>xasecure.audit.solr.solr_url</name>
            <value>{{ .Values.ranger.solrURL }}</value>
        </property>
        <property>
            <name>xasecure.audit.provider.summary.enabled</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr.urls</name>
            <value>{{ .Values.ranger.solrURL }}</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr.user</name>
            <value>ranger_solr</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr.password</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr.zookeepers</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.solr.batch.filespool.dir</name>
            <value>/var/log/presto/audit/solr/spool</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch</name>
            <value>false</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.urls</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.user</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.password</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.index</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.port</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.elasticsearch.protocol</name>
            <value>NONE</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs</name>
            <value>false</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.batch.filespool.dir</name>
            <value>/var/log/presto/audit/hdfs/spool</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.dir</name>
            <value>hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script</name>
            <value>__REPLACE_AZURE_SHELL_KEY_PROVIDER</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.account.key.__REPLACE_AZURE_ACCOUNT_NAME.blob.core.windows.net</name>
            <value>__REPLACE_AZURE_ACCOUNT_KEY</value>
        </property>
        <property>
            <name>xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.__REPLACE_AZURE_ACCOUNT_NAME.blob.core.windows.net</name>
            <value>__REPLACE_AZURE_ACCOUNT_KEY_PROVIDER</value>
        </property>
        <property>
            <name>xasecure.audit.destination.log4j</name>
            <value>true</value>
        </property>
        <property>
            <name>xasecure.audit.destination.log4j.logger</name>
            <value>xaaudit</value>
        </property>
    </configuration>

  ranger-trino-security.xml: |
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    --><configuration>

        <property>
            <name>ranger.plugin.trino.service.name</name>
            <value>{{ .Values.ranger.serviceName }}</value>
            <description>
          Name of the Ranger service containing policies for this Trino instance
        </description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.source.impl</name>
            <value>org.apache.ranger.admin.client.RangerAdminRESTClient</value>
            <description>
          Class to retrieve policies from the source
        </description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.rest.url</name>
            <value>{{ .Values.ranger.rangerURL }}</value>
            <description>
          URL to Ranger Admin
        </description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.rest.ssl.config.file</name>
            <value>/etc/hadoop/conf/ranger-policymgr-ssl.xml</value>
            <description>
          Path to the file containing SSL details to contact Ranger Admin
        </description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.pollIntervalMs</name>
            <value>{{ .Values.ranger.policyPollIntervalMs }}</value>
            <description>How often to poll for changes in policies?</description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.rest.client.connection.timeoutMs</name>
            <value>120000</value>
            <description>
          S3 Plugin RangerRestClient Connection Timeout in Milli Seconds
        </description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.rest.client.read.timeoutMs</name>
            <value>30000</value>
            <description>S3 Plugin RangerRestClient read Timeout in Milli Seconds</description>
        </property>
        <property>
            <name>ranger.plugin.trino.policy.cache.dir</name>
            <value>/etc/ranger/presto/policycache</value>
        </property>
    </configuration>


  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.worker" . }}-health-check
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  health_check.sh: |
    #!/bin/bash
    curl -H 'X-trino-User: healthCheck' -m 3 --silent {{ template "trino.fullname" . }}:{{ .Values.server.config.http.port }}/v1/info/state | grep --silent 'ACTIVE'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schemas-volume-worker
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  {{- range $key, $val := .Values.schemas }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}

---
{{- end }}
